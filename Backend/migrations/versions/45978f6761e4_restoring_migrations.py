"""Restoring migrations

Revision ID: 45978f6761e4
Revises: 1ffefe78423f
Create Date: 2023-12-15 20:52:26.658203

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '45978f6761e4'
down_revision = '1ffefe78423f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medicines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('dosage', sa.String(length=50), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('user_email', sa.String(length=120), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.Column('user_type', sa.Enum('ADMIN', 'PATIENT', 'DOCTOR', name='usertype'), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('contact_number', sa.String(length=15), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('img', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('specialization', sa.String(length=255), nullable=False),
    sa.Column('license_start_date', sa.Date(), nullable=True),
    sa.Column('last_license_renewed', sa.Date(), nullable=True),
    sa.Column('license_expiry_date', sa.Date(), nullable=True),
    sa.Column('license_number', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('time_slot_start', sa.Time(), nullable=False),
    sa.Column('time_slot_end', sa.Time(), nullable=False),
    sa.Column('time_slot_interval', sa.Integer(), nullable=False),
    sa.Column('doctor_visit', sa.Boolean(), nullable=False),
    sa.Column('patient_visit', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diagnosis', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_record_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescription_medicines',
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('medicine_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('prescription_id', 'medicine_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prescription_medicines')
    op.drop_table('prescriptions')
    op.drop_table('medical_record_documents')
    op.drop_table('medical_records')
    op.drop_table('appointment')
    op.drop_table('patients')
    op.drop_table('doctors')
    op.drop_table('user')
    op.drop_table('medicines')
    # ### end Alembic commands ###
